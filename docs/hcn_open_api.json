openapi: 3.0.0
info:
  version: 0.1.0
  title: HCN-CMS-API
servers:
  - url: 'http://localhost:8000'
paths:
  /api/series:
    description: >-
      A series is a way to group and categorise sermons together and usually
      have a start and end date that spans weeks or months.
    get:
      description: Fetch all series
      operationId: getAllSeries
      tags:
        - series
      parameters:
        - name: x-hcn-deviceid
          in: header
          required: true
          schema:
              type: string
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: starts_at
          in: query
          required: false
          schema:
            type: string
            format: date-format
        - name: ends_at
          in: query
          required: false
          schema:
            type: string
            format: date-format
        - name: tags
          in: query
          required: false
          schema:
            type: string
        - name: ordering
          in: query
          required: false
          schema:
            type: string
            enum:
              - title
              - -title
              - starts_at
              - -starts_at
              - ends_at
              - -ends_at
      responses:
        '200':
          description: Series
          content:
            application/json:
              schema:
                type: array
                items: null
                $ref: '#/components/schemas/Series'
  /api/series/{id}:
    description: Each series has a unique Id that can be requested for
    get:
      description: Fetch series by id
      operationId: getSeriesByid
      tags:
        - series
      parameters:
        - name: x-hcn-deviceid
          in: header
          required: true
          schema:
              type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Series resource
          content:
            application/json:
              schema:
                type: object
                $ref: '#/component/schemas/Series'
        '404':
          description: Resource not found
  /api/series/{id}/bookmark:
    description: >-
      Users will like to bookmark a series and as a result bookmark all the
      sermons under the series.
    patch:
      description: A user can choose to bookmark a preaching series
      tags:
        - series
      operationId: bookmarkSeriesByid
      parameters:
        - name: x-hcn-deviceid
          in: header
          required: true
          schema:
              type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Series bookmarked
        '404':
          description: Series not found
  /api/sermons:
    description: Get all sermons available
    get:
      tags:
        - sermons
      parameters:
        - name: x-hcn-deviceid
          in: header
          required: true
          schema:
              type: string
        - name: title
          in: query
          required: false
          schema: 
              type: string
        - name: published__[lte|gte]
          in: query
          required: false
          schema: 
              type: string
              format: date-format
        - name: mime_type
          in: query
          required: false
          schema: 
            type: string
            example: mp4
        - name: tags
          in: query
          required: false
          schema: 
              type: array
              items: 
                  type: string
        - name: preacher
          in: query
          required: false
          schema: 
              type: string
        - name: series
          in: query
          required: false
          schema: 
              type: integer
              format: int64
        - name: series__name
          in: query
          required: false
          schema:
              type: string
        - name: ordering
          in: query
          required: false
          schema: 
              type: string
              enum:
                  - published
                  - -published
                  - created_at
                  - -created_at
                  - updated_at
                  - -updated_at
                  - preacher
                  - -preacher
                  - title
                  - -title
                  - series
                  - -series
      responses:
        200:
          description: List of sermons
          content: 
            application/json:
              schema:
                  type: array
                  items: 
                      $ref: '#/components/schemas/Sermons'
    post:
        description: Create a new sermon
        tags: 
            - sermons
        operationId: createNewSermon
        parameters:
            - name: x-hcn-deviceid
              in: header
              required: true
              schema:
                type: string
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Sermons-write'
        responses:
            201:
                description: sermon created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Sermons'
            404:
                description: Bad request
  /api/sermons/{id}:
      description: Sermon resource
      get:
          tags:
              - sermons
          operationId: getSermonById
          description: Fetch sermon by id
          parameters:
              - name: x-hcn-deviceid
                in: header
                required: true
                schema:
                    type: string
              - name: id
                in: path
                required: true
                schema:
                    type: integer
          responses:
              200:
                  description: Sermon
                  content:
                      application/json:
                          schema:
                              $ref: '#/components/schemas/Sermons'
  /api/sermons/{id}/bookmark:
      description: Add sermon to user's bookmark
      patch:
          operationId: bookmarkSermonById
          description: Add sermon to user's bookmarks
          parameters:
              - name: x-hcn-deviceid
                in: header
                required: true
                schema:
                    type: string
              - name: id
                in: path
                required: true
                schema:
                    type: integer
                    example: 123
          tags:
              - sermons
          responses:
              204:
                  description: Sermon added to bookmark
  /api/sermons/{id}/add_like:
      description: Like a sermon
      patch:
          operationId: likeSermonById
          description: Add a like to a sermon
          parameters:
              - name: x-hcn-deviceid
                in: header
                required: true
                schema:
                    type: string
              - name: id
                in: path
                required: true
                schema:
                    type: integer
                    example: 123
          tags:
              - sermons
          responses:
              204:
                  description: Sermon added to bookmark
  /api/accounts/devices/register:
      description: Register device on application installation
      post:
        description: Register a new device
        operationId: postDeviceRegistration
        tags: 
            - accounts
            - devices
        responses:
            201:
                description: Successfully registered device
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Device'
            400:
                description: Bad request
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Device-write' 
components:
  schemas:
    Device:
        type: object
        properties:
            id: 
                type: integer
            token:
                type: string
            phone_model: 
                type: string
            os_name:
                type: string
            os_version: 
                type: string
            wifi:
                type: boolean
            bluetooth:
                type: boolean
            manufacturer:
                type: string
            screen_width:
                type: string
            screen_height:
                type: string
            created_at:
                type: string
                format: date-format
            status:
                type: string
                enum:
                    - ACTIVE 
                    - DISABLED
    Device-write:
        type: object
        required:
            - token
            - phone_model
            - manufacturer
            - status
        properties:
            id: 
                type: integer
            token:
                type: string
            phone_model: 
                type: string
            os_name:
                type: string
            os_version: 
                type: string
            wifi:
                type: boolean
            bluetooth:
                type: boolean
            manufacturer:
                type: string
            screen_width:
                type: string
            screen_height:
                type: string
            created_at:
                type: string
                format: date-format
            status:
                type: string
                enum:
                    - ACTIVE 
                    - DISABLED
    Series:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: New series 01
        description:
          type: string
          example: Description of series goes here
        start_date:
          type: string
          format: date-format
          example: 2020-07-01T01:00:00.000Z
        end_date:
          type: string
          format: date-format
          example: 2020-07-01T01:00:00.000Z
        tags:
          type: array
          items:
            type: string
            example: tag1
    Series-write:
      type: object
      required:
        - description
        - title
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-format
        end_date:
          type: string
          format: date-format
        tags:
          type: array
          items:
            type: string
    Sermons:
        type: object
        required:
            - id
            - title
            - description
            - mime_type
            - url
            - preacher
        properties:
            id:
                type: integer
                format: int64
                example: 123
            title: 
                type: string
            description: 
                type: string
            published: 
                type: string
                format: date-format
                example: 2020-07-01T01:00:00+00:00
            mime_type: 
                type: string
            url: 
                type: string
                format: url
            size: 
                type: integer
                format: int64
            tags:
                type: array
                items: 
                    type: string
            thumbnails: 
                type: string
                format: url
            series:
                type: integer
                example: 1
            slug: 
                type: string
            preacher:
                type: string
            likes: 
                type: integer
            created_at: 
                type: string
                format: date-format
            updated_at:
                type: string
                format: date-format
    Sermons-write:
        type: object
        required:
            - title
            - description
            - mime_type
            - url
            - preacher
        properties:
            title: 
                type: string
            description: 
                type: string
            published: 
                type: string
                format: date-format
                example: 2020-07-01T01:00:00+00:00
            mime_type: 
                type: string
            url: 
                type: string
                format: url
            size: 
                type: integer
                format: int64
            tags:
                type: array
                items: 
                    type: string
            thumbnails: 
                type: string
                format: url
            series:
                type: integer
                example: 1
            slug: 
                type: string
            preacher:
                type: string
            likes: 
                type: integer
            created_at: 
                type: string
                format: date-format
            updated_at:
                type: string
                format: date-format
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
